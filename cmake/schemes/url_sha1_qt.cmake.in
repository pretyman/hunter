# Copyright (c) 2013, 2015 Ruslan Baratov, Alexandre Pretyman
# All rights reserved.

cmake_minimum_required(VERSION 3.0)
project(Hunter)

include(ExternalProject) # ExternalProject_Add

include("@HUNTER_SELF@/cmake/Hunter")

include(hunter_status_debug)
include(hunter_test_string_not_empty)

hunter_status_debug("Scheme: url_sha1_qt")

# Check preconditions
hunter_test_string_not_empty("@HUNTER_SELF@")
hunter_test_string_not_empty("@HUNTER_EP_NAME@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_URL@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_SHA1@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_DOWNLOAD_DIR@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_SOURCE_DIR@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_INSTALL_PREFIX@")

set(configure_command "./configure")
set(configure_opts)

list(APPEND
    configure_opts
      -confirm-license
      -nomake examples
      -nomake tests
)

string(COMPARE NOTEQUAL "@QT_COMMERCIAL@" "" _is_qt_commercial)
if(_is_qt_commercial)
  list(APPEND
      configure_opts
        -commercial
  )
else() # is standard opensource
  list(APPEND
      configure_opts
        -opensource
  )
endif()

string(COMPARE EQUAL "@CMAKE_OSX_SYSROOT@" "iphoneos" _is_iphoneos)
string(COMPARE NOTEQUAL "@ANDROID@" "" _is_android)
string(COMPARE EQUAL "@CMAKE_SYSTEM_NAME@" "Linux" _is_linux)
string(COMPARE EQUAL "@CMAKE_SYSTEM_NAME@" "Darwin" _is_darwin)
string(COMPARE NOTEQUAL "@CROSS_COMPILE_TOOLCHAIN_PREFIX@" "" _is_cross_compile)

#insert windows test here
if(_is_iphoneos)
  list(APPEND
      configure_opts
        -xplatform macx-ios-clang
  )

  string(COMPARE NOTEQUAL "@IPHONESIMULATOR_ARCHS@" "" has_sim)
  string(COMPARE NOTEQUAL "@IPHONEOS_ARCHS@" "" has_dev)

  if(has_sim AND NOT has_dev)
    list(APPEND configure_opts -sdk iphoneos)
  elseif(has_dev AND NOT has_sim)
    list(APPEND configure_opts -sdk iphonesimulator)
  else()
    # build both, no extra options
  endif()

  list(APPEND configure_opts -release)
elseif(_is_android)
  #setup the android ndk options and skip unsupported modules
  list(APPEND
    configure_opts
      -xplatform android-g++
      -android-sdk <path/to/sdk>
      -android-ndk-host <e.g. linux-x86_64>
      -android-toolchain-version <e.g. 4.8>
      -skip qttranslations
      -skip qtwebkit
      -skip qtserialport
      -skip qtwebkit-examples
      -no-warnings-are-errors
  )
elseif(_is_cross_compile)
# AWP: for now this target is for the Raspberry Pi
# We will likely need a special if just for the Pi
# because of the -device option below
  list(APPEND
      configure_opts
        -release
        -opengl es2
        -optimized-qmake
        -no-pch
        -make libs
        -make tools
#        -reduce-relocations #AWP: This was available in the gcc 4.8.x toolchain, but not in 4.9.x
        -reduce-exports
        -sysroot "@CROSS_COMPILE_SYSROOT@"
        -device linux-rasp-pi-g++
        -device-option CROSS_COMPILE=@CROSS_COMPILE_TOOLCHAIN_PATH@/@CROSS_COMPILE_TOOLCHAIN_PREFIX@-
  )
elseif(_is_darwin)
  list(APPEND
    configure_opts
      -no-framework
      -no-dbus
  )
elseif(_is_linux)
  list(APPEND
    configure_opts
      -qt-xcb
  )
endif()

if(HUNTER_STATUS_DEBUG)
  list(APPEND configure_opts "-verbose")
endif()

if(BUILD_SHARED_LIBS)
  list(APPEND configure_opts "-shared")
else()
  list(APPEND configure_opts "-static")
endif()

list(APPEND configure_opts "-prefix" "@HUNTER_PACKAGE_INSTALL_PREFIX@")

hunter_status_debug("Qt configure options: ${configure_opts}")

set(
    configure_command
    . "@HUNTER_SELF@/scripts/clear-all.sh" && "${configure_command}"
)
set(build_command . "@HUNTER_SELF@/scripts/clear-all.sh" && make)

set(build_opts)
string(COMPARE NOTEQUAL "@HUNTER_JOBS_OPTION@" "" have_jobs)
if(have_jobs)
  list(APPEND build_opts "-j" "@HUNTER_JOBS_OPTION@")
endif()

ExternalProject_Add(
    "@HUNTER_EP_NAME@"
    URL
    @HUNTER_PACKAGE_URL@
    URL_HASH
    SHA1=@HUNTER_PACKAGE_SHA1@
    DOWNLOAD_DIR
    "@HUNTER_PACKAGE_DOWNLOAD_DIR@"
    SOURCE_DIR
    "@HUNTER_PACKAGE_SOURCE_DIR@"
    INSTALL_DIR
    "@HUNTER_PACKAGE_INSTALL_PREFIX@"
        # not used, just avoid creating Install/<name> empty directory
    CONFIGURE_COMMAND
    ${configure_command}
    ${configure_opts}
    BUILD_COMMAND
    ${build_command}
    ${build_opts}
    BUILD_IN_SOURCE
    1
    INSTALL_COMMAND
    make install
)
